# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 文旅看点

on:
  workflow_dispatch:
  schedule:
    - cron: '*/10 * * * *'
  watch:
    types: started
  repository_dispatch:
    types: wlapp
jobs:
   build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout
        run: |
          git clone https://github.com/wsdjj/hello-world.git ~/hello-world
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
      - name: npm install
        run: |
          npm install
      - name: '运行 【文旅看点】'
        run: |
          node wlapp.js
        env:      
          GETDOMAINBODY: ${{ secrets. GETDOMAINBODY }}
          GETDOMAINKEY: ${{ secrets. GETDOMAINKEY }}
          USERLOGINBODY: ${{ secrets. USERLOGINBODY }}
          USERLOGINKEY: ${{ secrets. USERLOGINKEY }}
          ARTLISTBODY: ${{ secrets. ARTLISTBODY }}
          ARTLISTKEY: ${{ secrets. ARTLISTKEY }}
          ARTSTATIONURL: ${{ secrets. ARTSTATIONURL }}
          ARTSTATIONKEY: ${{ secrets. ARTSTATIONKEY }}              
          READACCOUNTBODY: ${{ secrets. READACCOUNTBODY }} 
          READACCOUNTKEY: ${{ secrets. READACCOUNTKEY }}
          INFOMEBODY: ${{ secrets. INFOMEBODY }}
          INFOMEKEY: ${{ secrets. INFOMEKEY }}
          VIDEOARTLISTBODY: ${{ secrets. VIDEOARTLISTBODY }}
          VIDEOARTLISTKEY: ${{ secrets. VIDEOARTLISTKEY }}
          VIDEOREADACCOUNTBODY: ${{ secrets. VIDEOREADACCOUNTBODY }}
          VIDEOREADACCOUNTKEY: ${{ secrets. VIDEOREADACCOUNTKEY }}
          ARTDETAILBODY: ${{ secrets. ARTDETAILBODY }}
          ARTDETAILKEY: ${{ secrets. ARTDETAILKEY }}


   
          JD_DEBUG: ${{ secrets.JD_DEBUG }}
          PUSH_KEY: ${{ secrets.PUSH_KEY }}
          BARK_PUSH: ${{ secrets.BARK_PUSH }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
          BARK_SOUND: ${{ secrets.BARK_SOUND }}
          DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
          DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
          IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
